import Head from 'next/head';
import { Wrapper } from '../../../components/layout/Wrapper';
import { GetStaticPaths, GetStaticProps } from 'next';
import {
  getPlayerCardInfos,
  getUserById,
  PlayerCardInfo,
  pluckPlayerIds,
} from '../../../../prisma/queries';
import { Header } from '../../../components/layout/Header';
import { useRouter } from 'next/router';
import { PageHeader } from '../../../components/layout/PageHeader/PageHeader';
import {
  PlayerCardHolder,
  usePlayerCardHolder,
} from '../../../components/PlayerCardHolder';
import { GlobalContext } from '../../_app';

type Paths = {
  id: string;
};

type Props = {
  user: Awaited<ReturnType<typeof getUserById>>;
  cardInfos: PlayerCardInfo[];
};

type PageProps = Props & GlobalContext;

export const getStaticPaths: GetStaticPaths<Paths> = async () => {
  const userIds = await pluckPlayerIds();

  return {
    fallback: false,
    paths: userIds.map(({ id }) => ({
      params: {
        id: id.toString(),
      },
    })),
  };
};

export const getStaticProps: GetStaticProps<Props, Paths> = async (context) => {
  const userId = parseInt(context.params?.id ?? '0');
  const user = await getUserById(userId);
  const cardInfos = await getPlayerCardInfos(userId);

  if (!user) {
    return {
      notFound: true,
    };
  }

  return {
    props: {
      user,
      cardInfos,
    },
  };
};

export default function PlayerIndex({
  card,
  cardInfos,
  setCard,
  user,
}: PageProps) {
  const router = useRouter();

  const { getNextCard, getPreviousCard } = usePlayerCardHolder(
    cardInfos.length,
    setCard
  );

  return (
    <>
      <Head>
        <title>ES - {user?.name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Wrapper>
        <Header />

        <PageHeader
          text={user?.name ?? ''}
          asPath={router.asPath}
          navLinks={[
            { href: `/players/${user?.id}`, label: 'Statystyki' },
            {
              href: `/players/${user?.id}/champions`,
              label: 'Bohaterowie',
            },
            {
              href: `/players/${user?.id}/opponents`,
              label: 'Przeciwnicy',
            },
          ]}
        />

        <div id="container" className="flex flex-1">
          <PlayerCardHolder
            cardInfos={cardInfos}
            getNextCard={getNextCard}
            getPreviousCard={getPreviousCard}
            setVisibleCard={setCard}
            visibleCard={card}
          />
          <div id="dashboard" className="h-full flex-1"></div>
        </div>
      </Wrapper>
    </>
  );
}
