import Head from 'next/head';
import { GetStaticPaths, GetStaticProps } from 'next';
import {
  getPlayerCardInfos,
  getUserById,
  PlayerCardInfo,
  pluckPlayerIds,
} from '../../../../prisma/queries';
import { GlobalContext } from '../../_app';
import { NextPageWithLayout } from '../../../types';
import { PlayerPageLayout } from '../../../components/layouts';

type Paths = {
  id: string;
};

type Props = {
  user: Awaited<ReturnType<typeof getUserById>>;
  cardInfos: PlayerCardInfo[];
};

type PageProps = Props & GlobalContext;

export const getStaticPaths: GetStaticPaths<Paths> = async () => {
  const userIds = await pluckPlayerIds();

  return {
    fallback: false,
    paths: userIds.map(({ id }) => ({
      params: {
        id: id.toString(),
      },
    })),
  };
};

export const getStaticProps: GetStaticProps<Props, Paths> = async (context) => {
  const userId = parseInt(context.params?.id ?? '0');
  const user = await getUserById(userId);
  const cardInfos = await getPlayerCardInfos(userId);

  if (!user) {
    return {
      notFound: true,
    };
  }

  return {
    props: {
      cardInfos,
      user,
    },
  };
};

const PlayerOpponents: NextPageWithLayout<PageProps> = ({ user }) => {
  return (
    <>
      <Head>
        <title>ES - {user?.name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
    </>
  );
};

PlayerOpponents.getLayout = (page) => {
  return (
    <PlayerPageLayout cardInfos={page.props.cardInfos} user={page.props.user}>
      {page}
    </PlayerPageLayout>
  );
};

export default PlayerOpponents;
